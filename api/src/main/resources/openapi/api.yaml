---
openapi: 3.0.2
info:
  title: SD Party Reference Data
  description: |
    Permite gestionar los datos de referencias de las personas naturales o juridicas que forman parte del contexto de operación de los procesos de negocio. Pueden representan tanto a los clientes, proveedores de servicios y colaboradores de la organización.
  contact:
    name: ianache
    email: ianache@crossnetcorp.com
  license:
    name: crossnetcorp License
    url: https://www.crossnetcorp.com/license
  version: 1.0.0-SNAPSHOT
servers:
  - url: http://0.0.0.0:8082/partyreferencedata/api/v1
    description: URL del endpoint
tags:
  - name: party
    description: Microservicio Customer Reference Data
paths:
  /party:
    post:
      tags:
        - party
      summary: Registro de una nueva persona natural o juridica
      description: |
        Esta funcionalidad permite realizar el registro de una nueva persona natural o jurídica.
      operationId: newParty
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/NewPartyReferenceDataRequest"
        required: true
      responses:
        201:
          description: Persona creada
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EntityId"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
      security:
        - bearerAuth: []

    get:
      tags:
        - party
      summary: Query registered parties
      description: |
        Allow to query all registered parties based on party data.
      operationId: searchParty
      parameters:
        - name: docNumber
          in: query
          description: Party document number
          schema:
            type: string
        - name: name
          in: query
          description: Party name (any part of the name)
          schema:
            type: string
        - name: partyType
          description: Party type
          schema:
            type: string
            enum:
              - people
              - organization
          in: query
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartiesSearchResponse"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
      security:
        - bearerAuth: []

  /party/{id}:
    get:
      tags:
        - party
      parameters:
        - name: id
          in: path
          description: should be a unique identifier or a list of unique party identifies by comma delimited list.
          example: "2343567,20537823329"
          schema:
            type: string
          required: true
      summary: Get party detail
      operationId: getParty by unique identifier
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PartiesSearchResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
      security:
        - bearerAuth: []
    put:
      tags:
        - party
      parameters:
        - name: id
          in: path
          description: should be a unique identifier or a list of unique party identifies by comma delimited list.
          example: "2343567,20537823329"
          schema:
            type: string
          required: true
      summary: Update party data
      description: |
        Esta funcionalidad permite realizar la actualización de los datos de una persona u organización.
      operationId: updateParty
      responses:
        201:
          description: Successful
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EntityId"
        400:
          description: Validation error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/APIError"
      security:
        - bearerAuth: []

components:
  schemas:
    APIError:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 1000
          description: Custom error code
        message:
          type: string
          description: Custom error description
        reason:
          type: string
          description: Detailed error explanation
        location:
          type: string
          description: URI for failed endpoint
        errors:
          type: array
          description: Specific errors detailed
          items:
            "$ref": "#/components/schemas/APIError"

    NewPartyReferenceDataRequest:
      type: object
      properties:
        party:
          type: object
          description: Party detailed data
          allOf:
            - "$ref": "#/components/schemas/PartyReferenceData"

    EntityId:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          description: Unique entity identifier

    DocumentNumber:
      required:
        - id
        - number
      type: object
      properties:
        id:
          type: string
          description: Document type
          enum:
            - DNI
            - CE
            - PASSPORT
            - RUC
        number:
          type: string
          description: |
            Document number according to document type. Restrictions apply based on: DNI (7 digits), CE (9 digits), RUC(12 digits), PASSPORT (6 or more)
          example: "000199985"

    PartyName:
      required:
        - function
        - value
      type: object
      properties:
        id:
          type: string
          description: Party name internal reference number (auto generated)

        function:
          type: string
          description: Name function
          enum:
            - firstName
            - otherName
            - middleName
            - lastName
            - commercialName
            - tradeName
        name:
          type: string
          description: |
            Document number according to document type. Restrictions apply based on: DNI (7 digits), CE (9 digits), RUC(12 digits), PASSPORT (6 or more)

    PartyReferenceData:
      required:
        - firstName
        - birstDate
        - lastName
      type: object
      properties:
        fullName:
          type: array
          description: Full party name
          items:
            "$ref": "#/components/schemas/PartyName"
        #        firstName:
        #          type: string
        #          description: Party first name
        #        middleName:
        #          type: string
        #          description: Party middle name
        #        lastName:
        #          type: string
        #          description: Party last name
        birthDate:
          type: string
          format: date
          description: Birth date (people) o registration date (organization)
        document:
          type: array
          description: Documento identification
          items:
            "$ref": "#/components/schemas/DocumentNumber"
        addresses:
          type: array
          description: Address
          items:
            "$ref": "#/components/schemas/Location"


    PartiesSearchResponse:
      type: object
      properties:
        totalItems:
          type: integer
          description: Total items for query parameters
        pages:
          type: integer
          description: Total item pages
        pageSize:
          type: integer
          description: Total items per page
        items:
          type: array
          description: Detailed items list
          items:
            $ref: "#/components/schemas/PartyReferenceData"

    Location:
      type: object
      properties:
        address:
          type: string
          description: Location address
        number:
          type: string
          description: Location number
        geoLocation:
          type: object
          description: Geographical location
          allOf:
            - "$ref": "#/components/schemas/GeoLocation"

    GeoLocation:
      type: object
      properties:
        countryCode:
          type: string
          description: ISO Country code
        state:
          type: string
          description: Country first level organization
        district:
          type: string
          description: Country second level organization
        county:
          type: string
          description: Country third level organization
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
